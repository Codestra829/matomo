{% extends 'admin.twig' %}

{% set title %}{{ 'PrivacyManager_GDPR'|translate }}{% endset %}

{% block content %}
    <div piwik-content-intro>
        <h2>{{ 'PrivacyManager_AskingForConsent'|translate|e('html_attr') }}</h2>
        <p>{{ 'PrivacyManager_ConsentMeans'|translate|e('html_attr') }}</p>
    </div>

    <div piwik-content-block content-title="{{ 'PrivacyManager_WhenINeedConsent'|translate|e('html_attr') }}" class="privacyAskingForConsent">
        <p>
            {{ 'PrivacyManager_WhenINeedConsentNote1'|translate|e('html_attr') }}
            <br /><br />
            {{ 'PrivacyManager_WhenINeedConsentNote2'|translate|e('html_attr') }} <a href="{{ linkTo({module: 'PrivacyManager', action: 'privacySettings'}) }}">anonymise your previously tracked users' raw data</a>.
        </p>
    </div>

    <div piwik-content-block content-title="{{ 'PrivacyManager_HowToAskConsent'|translate|e('html_attr') }}" class="privacyAskingForConsent">
        <p>
            {{ 'PrivacyManager_HowToAskConsentNote1'|translate|e('html_attr') }}
        </p>

        <h3>{{ 'PrivacyManager_ConsentStep1Title'|translate|e('html_attr') }}</h3>
        <p>
            {{ 'PrivacyManager_ConsentStep1Note1'|translate|e('html_attr') }}
        </p>
        <pre piwik-select-on-focus><code>// require user consent before processing data
_paq.push(['requireConsent']);
_paq.push(['trackPageview']);
[...]</code></pre>
        <p>
             {{ 'PrivacyManager_ConsentStep1Note2'|translate|e('html_attr') }}
			 {{ 'PrivacyManager_ConsentStep1Link'|translate('<a href="https://matomo.org/faq/general/faq_146/" target="_blank" rel="noreferrer noopener">','</a>')|raw }} {{ 'PrivacyManager_ConsentStep1Note3'|translate|e('html_attr') }}
        </p>
        <h3>{{ 'PrivacyManager_ConsentStep2Title'|translate|e('html_attr') }}</h3>
        <p>{{ 'PrivacyManager_ConsentStep2Note1'|translate|e('html_attr') }}
        </p>
        <h3>{{ 'PrivacyManager_ConsentStep3Title'|translate|e('html_attr') }}</h3>
        <p>
            {{ 'PrivacyManager_ConsentStep3Note1'|translate|e('html_attr') }}
            <br /><br />
            <strong>{{ 'PrivacyManager_ConsentStep3Note2'|translate|e('html_attr') }}</strong>
            <br />
            {{ 'PrivacyManager_ConsentStep3Note3'|translate|e('html_attr') }}
        </p>
        <pre piwik-select-on-focus><code>_paq.push(['rememberConsentGiven'])</code></pre>
        <p>
            {{ ConsentStep3Note4 <code piwik-select-on-focus>_paq.push(['rememberConsentGiven'])</code> {{ ConsentStep3Note5 <code piwik-select-on-focus>_paq.push(['setConsentGiven'])</code>{{ ConsentStep3Note6
            <br /><br />
            Notes:
        </p>
            <ol>
            <li>By default, the cookie and consent will be remembered forever. It is possible to define an optional expiry period for your user consent by calling:

                <br /><code piwik-select-on-focus>_paq.push(['rememberConsentGiven', optionallyExpireConsentInHours])</code>.</li>
            <li>When you're tracking multiple sub-domains into the same website in Matomo, you want to ensure that when you ask for Consent, the user gives consent for all the sub-domains on which you are collecting data. If the user only gives consent for a particular domain or sub-domain(s), you may need to restrict or widen the scope of the consent cookie domain and path by using 'setCookieDomain' and ‘setCookiePath' (learn more in the JavaScript tracking guide). </li>
            <li>It is required that you do not disable cookies.</li>
            </ol>
        <p>
            <br />
            <br />
            <strong>B) if you use your own consent tool to remember the consent</strong>
            <br />
            In some cases, you record the information that the user has given consent to be tracked directly in your own system or CMS (for example when you use your own a cookie to remember user consent). Once you have the consent by the user to process their data, you need to call the 'setConsentGiven' method:
        </p>
        <pre piwik-select-on-focus><code>// require user consent before processing data
_paq.push(['requireConsent']);
_paq.push([‘trackPageview']);
[...]

// user has given consent to process their data
_paq.push(['setConsentGiven']);</code></pre>
        <p>
            This lets the JavaScript tracker know that the user has given consent and ensures the tracking is working as expected. This function needs to be called anytime after <code piwik-select-on-focus>_paq.push(['requireConsent'])</code>.
            <br />
            <br />
            Notes:
        </p>
        <ol>
            <li>when you call <code piwik-select-on-focus>_paq.push(['setConsentGiven'])</code>, Matomo will not remember on subsequent requests that this user has given consent: it is important that you call setConsentGiven on every page.</li>
            <li>when the user has given consent, you could also avoid calling <code piwik-select-on-focus>_paq.push(['requireConsent'])</code> in the first place. </li>
        </ol>

        <h3>Step 4: user removes consent</h3>
        <p>
            In order to remove his consent the user needs to perform a specific action, for example: clicking on a button "I do not want to be tracked anymore".
            <br /><br />
            <strong>A) if you want to let Matomo remember the consent</strong>
            <br />
            When the user has expressed she or he no longer gives consent, you need to call the following method once:
        </p>
        <pre piwik-select-on-focus><code> _paq.push(['forgetConsentGiven']);</code></pre>
        <p>This makes sure the cookie that remembered the given consent is deleted.

            <br />
            <br />
            <strong>B) if you use your own consent tool to remember the consent</strong><br />
            When the user has expressed she or he no longer gives consent, you shall not call the following method anymore:
            <br />
        </p>
        <pre piwik-select-on-focus><code>// do not call this once user has removed their consent
_paq.push(['setConsentGiven']);</code></pre>

    </div>
{% endblock %}
